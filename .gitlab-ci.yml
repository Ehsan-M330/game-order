image: registry.local/alpine-with-docker:latest

stages:
  - build
  - test
  - deploy

variables:
  DOCKER_USER: $DOCKER_USER
  DOCKER_PASS: $DOCKER_PASS
  REGISTRY_URL: registry.local:443
  IMAGE_NAME: game-order
  
build-app:
  stage: build
  tags:
    - build
  before_script:
    - docker login $REGISTRY_URL -u $DOCKER_USER -p $DOCKER_PASS
  script:
    - docker pull $REGISTRY_URL/$IMAGE_NAME:latest || true
    - docker build --network=host --cache-from $REGISTRY_URL/$IMAGE_NAME:latest . -t $REGISTRY_URL/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
    - docker tag $REGISTRY_URL/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA $REGISTRY_URL/$IMAGE_NAME:latest
    - docker push $REGISTRY_URL/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
    - docker push $REGISTRY_URL/$IMAGE_NAME:latest
  only:
    - master
  retry:
    max: 2
    when:
      - unknown_failure
      - script_failure
      - api_failure
      
deploy-app:
  stage: deploy
  tags:
    - deploy
  before_script:
    - docker login $REGISTRY_URL -u $DOCKER_USER -p $DOCKER_PASS
  script:
    - echo $DOCKER_ENV > env_variables
    - docker stop $IMAGE_NAME || true
    - docker rm $IMAGE_NAME || true
    - docker run -d --network=app-network --env-file env_variables --restart=always --name $IMAGE_NAME -p 127.0.0.1:8080:8000 $REGISTRY_URL/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
  only:
    - master
  when: manual
  retry:
    max: 2
    when:
      - unknown_failure
      - script_failure
      - api_failure
